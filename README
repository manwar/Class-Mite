Class::Mite

The README  is  used  to  introduce the module and provide instructions on how to
install the module, any machine dependencies it may have (for example C compilers
and installed libraries) and any other information that should be provided before
the module is installed.

A  README  file  is required for CPAN modules since CPAN extracts the README file
from a module distribution so that people browsing the archive can use it to  get
an  idea  of  the  module's  uses.  It  is usually a good idea to provide version
information here so that people can decide whether fixes for the module are worth
downloading.

INSTALLATION

To install this module, run the following commands:

    perl Makefile.PL
    make
    make test
    make install

EXAMPLES

1. Class ONLY

    package MyApp::User;
    use Class;

    sub BUILD {
        my ($self, $args)  = @_;
        $self->{full_name} = join ' ', $args->{first}, $args->{last};
    }

    sub get_name { shift->{full_name} }
    sub get_id   { shift->{id} }

    package main;

    use strict;
    use warnings;

    my $user = MyApp::User->new(
        first => 'John',
        last  => 'Doe',
        id    => 42,
    );

    print $user->get_id;   # 42
    print $user->get_name; # John Doe

2. Class with Inheritance

    package MyApp::Person;
    use Class;

    sub BUILD {
        my ($self, $args)  = @_;
        $self->{full_name} = join ' ', $args->{first}, $args->{last};
    }

    sub get_name { shift->{full_name} }

    package MyApp::Employee;
    use Class;
    extends qw/MyApp::Person/;

    sub get_id { shift->{id} }

    package main;

    use strict;
    use warnings;

    my $emp = MyApp::Employee->new(
        first => 'John',
        last  => 'Doe',
        id    => 42
    );

    print $user->get_id;   # 42
    print $user->get_name; # John Doe

3. Class with Role

    package Loggable;
    use Role;
    requires qw/get_name/;

    sub log {
        my ($self, $msg) = @_;
        return "[LOG] $msg\n";
    }

    package MyApp::Admin;
    use Class;
    with qw/Loggable/;

    sub get_name { shift->{name} }

    package main;
    use strict;
    use warnings;

    my $admin = MyApp::Admin->new(name => 'Alice');

    print $admin->get_name;              # Alice
    print $admin->log("Admin created");  # [LOG] Admin created

4. Class with Roles

    package Loggable;
    use Role;
    requires qw/get_name/;

    sub log {
        my ($self, $msg) = @_;
        return "[LOG] $msg\n";
    }

    package File;
    use Role;
    requires qw/save/;

    package MyApp::Admin;
    use Class;
    with qw/Loggable File/;

    sub get_name { shift->{name}     }

    sub save     { shift->log(shift) }

    package main;
    use strict;
    use warnings;

    my $admin = MyApp::Admin->new(name => 'Alice');

    print $admin->get_name;              # Alice
    print $admin->log("Admin created");  # [LOG] Admin created
    print $admin->save("Data saved");    # [LOG] Data saved

SUPPORT AND DOCUMENTATION

After installing,  you  can  find  documentation for this module with the perldoc
command.

    perldoc Role
    perldoc Class
    perldoc Class::More
    perldoc Class::Clone

You can also look for information at:

    BUG Report
        https://github.com/manwar/Class-Mite/issues

LICENSE AND COPYRIGHT

Copyright (C) 2025 Mohammad Sajid Anwar

This program is free software; you can redistribute it and/or modify it under the
terms of the the Artistic License (2.0).You may obtain a copy of the full license
at:

    http://www.perlfoundation.org/artistic_license_2_0

Any  use,  modification, and distribution of the Standard or Modified Versions is
governed by this Artistic License.By using, modifying / distributing the Package,
you accept this license. Do not use, modify, or distribute the Package, if you do
not accept this license.

If your Modified Version has been derived from a Modified Version made by someone
other than you, you're nevertheless required to ensure that your Modified Version
complies with the requirements of this license.

This  license  does  not  grant you the right to use any trademark, service mark,
tradename, or logo of the Copyright Holder.

This license includes the non-exclusive, worldwide, free-of-charge patent license
to  make,  have made, use, offer to sell, sell, import and otherwise transfer the
Package with respect to any patent claims licensable by the Copyright Holder that
are  necessarily  infringed  by the  Package.  If you institute patent litigation
(including  a  cross-claim or  counterclaim)  against any party alleging that the
Package constitutes direct or contributory patent infringement,then this Artistic
License to you shall terminate on the date that such litigation is filed.

Disclaimer  of  Warranty:  THE  PACKAGE  IS  PROVIDED BY THE COPYRIGHT HOLDER AND
CONTRIBUTORS  "AS IS'  AND WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES. THE IMPLIED
WARRANTIES    OF     MERCHANTABILITY,   FITNESS   FOR   A PARTICULAR  PURPOSE, OR
NON-INFRINGEMENT ARE DISCLAIMED TO THE EXTENT PERMITTED BY YOUR LOCAL LAW. UNLESS
REQUIRED BY LAW, NO COPYRIGHT HOLDER OR CONTRIBUTOR WILL BE LIABLE FOR ANY DIRECT,
INDIRECT, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING IN ANY WAY OUT OF THE USE
OF THE PACKAGE,EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
